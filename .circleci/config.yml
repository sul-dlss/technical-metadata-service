version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: suldlss/technical-metadata-service
    docker:
    - image: circleci/buildpack-deps:stretch
jobs:
  test:
    docker:
    - image: circleci/ruby:2.7.2-node
      environment:
        BUNDLE_JOBS: 3
        BUNDLE_RETRY: 3
        BUNDLE_PATH: vendor/bundle
        PGHOST: 127.0.0.1
        PGUSER: circleci-demo-ruby
        PGPASSWORD: sekret
        RAILS_ENV: test
        NOKOGIRI_USE_SYSTEM_LIBRARIES: true
    - image: circleci/postgres:11
      environment:
        POSTGRES_USER: postgres
        POSTGRES_DB: technical_metadata_test
        POSTGRES_PASSWORD: sekret
    steps:
    - checkout

    # Upgrade bundler
    - run:
        name: Install Bundler
        command: gem install bundler

    - run:
        name: Which bundler?
        command: bundle -v

    - restore_cache:
        keys:
        - technical-metadata-bundle-v2-{{ checksum "Gemfile.lock" }}
        - technical-metadata-bundle-v2-

    - run:
        name: Bundle Install
        command: bundle check || bundle install

    - save_cache:
        key: technical-metadata-bundle-v2-{{ checksum "Gemfile.lock" }}
        paths:
        - vendor/bundle

    # Only necessary if app uses webpacker or yarn in some other way
    - restore_cache:
        keys:
          - technical-metadata-yarn-{{ checksum "yarn.lock" }}
          - technical-metadata-
    - run:
        name: Yarn Install
        command: yarn install --cache-folder ~/.cache/yarn

    # Store yarn / webpacker cache
    - save_cache:
        key: technical-metadata-yarn-{{ checksum "yarn.lock" }}
        paths:
          - ~/.cache/yarn
    - run:
        name: Webpacker compile
        command: NODE_ENV=test bundle exec rails webpacker:compile

    - run:
        name: Check styles using rubocop
        command: bundle exec rubocop

    # Need `psql` command when you store the app schema as SQL instead of as Ruby
    - run:
        name: Install postgresql client
        command: |
          sudo apt update -y
          sudo apt install -y postgresql-client || true

    - run:
        name: Wait for DB
        command: dockerize -wait tcp://localhost:5432 -timeout 1m

    - run:
        name: Test prepare
        command: bin/rails db:test:prepare

    - run:
        name: Setup Code Climate test-reporter
        command: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

    - run:
        name: Run rspec
        command: bundle exec rspec

    - run:
        name: upload test coverage report to Code Climate
        command: ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?

    - run:
        name: Validate API specification
        command: |
          sudo npm install -g openapi-enforcer-cli
          result=$(openapi-enforcer validate openapi.yml)
          [[ $result =~ "Document is valid" ]] && {
          echo "Validation good"
          exit 0
          } || {
          echo $result
          exit 1
          }

    # Save test results for timing analysis
    - store_test_results:
        path: test_results

  build-image:
    executor: docker-publisher
    steps:
    - checkout
    - setup_remote_docker:
        # Setting docker version per https://support.circleci.com/hc/en-us/articles/360050934711-Docker-build-fails-with-EPERM-operation-not-permitted-copyfile-when-using-node-14-9-0-or-later-
        version: 19.03.13
    - run:
        name: Build Docker image
        command: |
          docker build -t $IMAGE_NAME:latest -f docker/app/Dockerfile .
    - run:
        name: Archive Docker image
        command: |
          docker save -o app_image.tar $IMAGE_NAME
    - persist_to_workspace:
        root: .
        paths:
        - ./app_image.tar
  publish-latest:
    executor: docker-publisher
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - setup_remote_docker:
        # Setting docker version per https://support.circleci.com/hc/en-us/articles/360050934711-Docker-build-fails-with-EPERM-operation-not-permitted-copyfile-when-using-node-14-9-0-or-later-
        version: 19.03.13
    - run:
        name: Load archived Docker image
        command: |
          docker load -i /tmp/workspace/app_image.tar
    - run:
        name: Publish Docker Image to Docker Hub
        command: |
          echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
          docker push $IMAGE_NAME:latest
  publish-tag:
    executor: docker-publisher
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - setup_remote_docker:
        # Setting docker version per https://support.circleci.com/hc/en-us/articles/360050934711-Docker-build-fails-with-EPERM-operation-not-permitted-copyfile-when-using-node-14-9-0-or-later-
        version: 19.03.13
    - run:
        name: Load archived Docker image
        command: |
          docker load -i /tmp/workspace/app_image.tar
    - run:
        name: Publish Docker Image to Docker Hub
        command: |
          echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:$CIRCLE_TAG
          docker push $IMAGE_NAME:$CIRCLE_TAG
workflows:
  version: 2

  test:
    jobs:
    - test

  build:
    jobs:
    - build-image:
        filters:
          branches:
            only: main
    - publish-latest:
        requires:
        - build-image
        filters:
          branches:
            only: main
  build-tags:
    jobs:
    - build-image:
        filters:
          tags:
            only: /^[0-9]+\.[0-9]+\.[0-9]+/
          branches:
            ignore: /.*/
    - publish-tag:
        requires:
        - build-image
        filters:
          tags:
            only: /^[0-9]+\.[0-9]+\.[0-9]+/
          branches:
            ignore: /.*/
